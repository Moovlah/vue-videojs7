{"version":3,"sources":["webpack:///./node_modules/_global@4.3.2@global/document.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-object.js","webpack:///./node_modules/_videojs-vtt.js@0.14.1@videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/_safe-json-parse@4.0.0@safe-json-parse/tuple.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-absolute-index.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/aac/probe.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_is-array-iter.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/aac/index.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/data/silence.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/_tsml@1.0.1@tsml/tsml.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es6.object.assign.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_for-of.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_library.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_set-species.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/utils/bin.js","webpack:///./node_modules/_is-callable@1.1.4@is-callable/index.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_invoke.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/codecs/h264.js","webpack:///./node_modules/_vue@2.5.17@vue/dist/vue.runtime.esm.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_shared.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es6.array.iterator.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iter-create.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_dom-create.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-primitive.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_is-object.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es7.promise.finally.js","webpack:///./node_modules/_videojs-vtt.js@0.14.1@videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_global.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_wks.js","webpack:///./node_modules/_videojs-vtt.js@0.14.1@videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-length.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/index.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_defined.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iter-define.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-keys-internal.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iobject.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_classof.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_hide.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/utils/stream.js","webpack:///./node_modules/_trim@0.0.1@trim/index.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_has.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_redefine.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_uid.js","webpack:///./node_modules/_is-function@1.0.1@is-function/index.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_export.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_core.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-integer.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_microtask.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-gpo.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/utils/clock.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-dp.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_a-function.js","webpack:///./node_modules/_parse-headers@2.0.1@parse-headers/parse-headers.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_an-object.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/codecs/adts.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_shared-key.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/es6.promise.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_to-iobject.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iterators.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_species-constructor.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_cof.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_an-instance.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-pie.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/probe.js","webpack:///./node_modules/_vue-router@3.0.1@vue-router/dist/vue-router.esm.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-keys.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_new-promise-capability.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_redefine-all.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iter-detect.js","webpack:///./node_modules/_m3u8-parser@4.2.0@m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/_mpd-parser@0.6.1@mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/_pkcs7@1.0.2@pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/_aes-decrypter@3.0.0@aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/_video.js@7.2.3@video.js/dist/video.es.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_html.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_fails.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iter-call.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/probe.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_promise-resolve.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_xtend@4.0.1@xtend/immutable.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_user-agent.js","webpack:///./node_modules/_@babel_runtime@7.0.0-beta.47@@babel/runtime/helpers/builtin/es6/defineProperty.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_perform.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-create.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_iter-step.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_property-desc.js","webpack:///./node_modules/_xhr@2.4.0@xhr/index.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_array-includes.js","webpack:///./node_modules/_global@4.3.2@global/window.js","webpack:///./node_modules/_videojs-vtt.js@0.14.1@videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/_vuex@3.0.1@vuex/dist/vuex.esm.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-dps.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-assign.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_descriptors.js","webpack:///./node_modules/_url-toolkit@2.1.6@url-toolkit/src/url-toolkit.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_task.js","webpack:///./node_modules/_for-each@0.3.3@for-each/index.js","webpack:///./node_modules/_mux.js@4.5.1@mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_object-gops.js","webpack:///./node_modules/_core-js@2.5.7@core-js/modules/_ctx.js"],"names":["global","doccy","topLevel","window","minDoc","__webpack_require__","document","module","exports","defined","it","Object","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","d","__webpack_exports__","SafeParseTuple","obj","reviver","json","error","JSON","parse","err","Stream","cea708Parser","CaptionStream","prototype","init","captionPackets_","ccStreams_","Cea608Stream","reset","forEach","cc","on","trigger","bind","push","event","sei","userData","newCaptionPackets","nalUnitType","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","dts","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","pts","flush","length","elem","idx","presortIndex","sort","a","b","packet","type","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","code","String","fromCharCode","BOTTOM_ROW","ROWS","createDisplayBuffer","result","i","field","dataChannel","field_","dataChannel_","name_","setConstants","data","swap","char0","char1","text","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","slice","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","indexOf","formatting_","isColorPAC","isNormalChar","content","map","trim","join","replace","startPts","endPts","stream","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","undefined","format","reduce","reverse","popOn","baseRow","rollUp","paintOn","toInteger","max","Math","min","index","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","percentEncode","bytes","start","end","toString","parseIso88591","unescape","parseId3TagSize","header","byteIndex","returnSize","flags","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseType","charCodeAt","parseSampleRate","parseAacTimestamp","frameStart","frameSize","frame","frameHeader","subarray","byteLength","owner","size","Iterators","ITERATOR","ArrayProto","Array","AacStream","everything","Uint8Array","timeStamp","setTimestamp","timestamp","bytesLeft","chunk","tempLength","set","highPrefix","lowPrefix","zeroFill","count","makeTable","metaTable","keys","key","arr","part","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","isLikelyAacData","arrayEquals","sumFrameByteLengths","mp4","frameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS","array","currentObj","sum","track","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","Infinity","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","baseMediaDecodeTime","setVideoBaseMediaDecodeTime","setAudioAppendStart","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts_","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence_","samples","generateSampleTable_","concatenateFrameData_","clearDtsInfo","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","samplerate","ceil","floor","splice","videoTsToAudioTs","minSegmentDts","filter","currentFrame","minSegmentPts","duration","dataOffset","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","sps","gopForFusion","gops","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","unshift","nalCount","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","generateSampleTable","concatenateNalData","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","flushSource","caption","id3","initSegment","offset","captions","captionStreams","info","timelineStartPts","startTime","endTime","cueTime","dispatchType","self","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","pipe","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","isAac","resetCaptions","StreamTypes","handleRollover","probe","ts","aac","PES_TIMESCALE","MP2T_PACKET_LENGTH","SYNC_BYTE","parsePsi_","pmt","startIndex","endIndex","pid","parsePat","table","parsePmt","parseAudioPes_","pesType","pusi","parsed","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","audio","parseVideoPes_","pes","video","firstKeyFrame","videoPacketContainsKeyFrame","adjustTimestamp_","segmentInfo","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","audioTimescale","inspectTs_","hasOwnProperty","H264_STREAM_TYPE","ADTS_STREAM_TYPE","inspect","isAacData","clean","s","sa","arguments","$export","S","F","assign","defineProperty","get","ctx","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","iterable","entries","fn","that","step","iterator","iterFn","f","TypeError","next","done","value","dP","DESCRIPTORS","SPECIES","KEY","C","configurable","toUnsigned","fnToStr","Function","constructorRegex","isES6ClassFn","fnStr","test","e","tryFunctionObject","toStr","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","args","un","apply","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","ExpGolomb","buffer","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","trackId","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","j","deltaScale","lastScale","nextScale","readExpGolomb","newLength","newData","emulationPreventionBytesPositions","sourceIndex","profileIdc","levelIdc","profileCompatibility","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","readUnsignedByte","skipUnsignedExpGolomb","readUnsignedExpGolomb","skipBits","readBoolean","skipExpGolomb","readBits","width","height","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","_toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","isFinite","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","create","list","split","toLowerCase","isReservedAttribute","remove","item","hasOwn","cached","cache","hit","camelizeRE","camelize","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","boundFn","l","_length","nativeBind","toArray","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","def","enumerable","writable","bailRE","parsePath","path","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","has","clear","warn","uid","Dep","id","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","VNode","tag","children","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","name","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","setTimeout","channel","port","port2","port1","onmessage","postMessage","Promise","p","resolve","then","withMacroTask","_withTask","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","queue","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createElement","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","applyNS","registerDeepBindings","force","style","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","version","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","core","SHARED","store","copyright","addToUnscopables","toIObject","iterated","kind","O","Arguments","descriptor","setToStringTag","IteratorPrototype","Constructor","NAME","valueOf","m2tsStreamTypes","bytesInBuffer","parsePsi","packetsWaitingForPmt","programMapTable","payload","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","sectionLength","tableEnd","programInfoLength","timed-metadata","streamType","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","parsePes","ptsDtsFlags","packetLength","dataAlignmentIndicator","flushStream","forceFlush","fragment","packetData","packetFlushable","PAT_PID","speciesConstructor","promiseResolve","P","R","finally","onFinally","isFunction","x","scrollSetting","","up","findScrollSetting","scroll","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","Error","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","setting","SyntaxError","__g","USE_SYMBOL","$exports","_objCreate","ParsingError","errorData","message","parseTimeStamp","input","computeSeconds","m","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","kv","k","parseCue","cue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","consumeCueSettings","settings","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","position","right","positionAlign","skipWhitespace","substr","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","shouldAdd","element","localName","annotation","t","rootDiv","tagStack","createProcessingInstruction","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","textTrackList","mediaElement","trackList","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","bottom","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","box","BoxPosition","lh","offsetWidth","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","round","maxPosition","initialAxis","abs","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","b2","container","y","intersectArea","reference","getSimpleBoxPosition","StringDecoder","decode","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","paddedOverlay","shouldCompute","hasBeenReset","displayState","margin","fontSize","Parser","decoder","state","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseRegion","xy","anchor","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","alreadyCollectedLine","hasSubstring","oncue","onflush","generator","CaptionParser","LIBRARY","redefine","hide","$iterCreate","getPrototypeOf","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","proto","TAG","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","arrayIndexOf","IE_PROTO","object","names","cof","propertyIsEnumerable","ARG","tryGet","T","B","callee","maxSegmentPts","maxSegmentDts","scale","createDesc","listener","off","dispose","destination","stat","SRC","TO_STRING","$toString","TPL","inspectSource","safe","px","random","string","alert","confirm","prompt","PROTOTYPE","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","W","__e","MAX_TS","RO_THRESH","lastDTS","referenceDTS","type_","macrotask","MutationObserver","WebKitMutationObserver","process","isNode","head","domain","exit","standalone","promise","toggle","characterData","task","ObjectProto","inspectMp4","textifyMp4","parseMp4Date","seconds","Date","parseSampleFlags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","nalParse","avcStream","avcView","DataView","byteOffset","getUint32","avc1","view","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","avcC","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","btrt","bufferSizeDB","maxBitrate","avgBitrate","esds","esId","streamPriority","decoderConfig","objectProfileIndication","bufferSize","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","dref","dataReferences","hdlr","getUint8","handlerType","escape","nals","mdhd","language","creationTime","modificationTime","timescale","mdia","mfhd","minf","mp4a","channelcount","samplesize","streamDescriptor","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","pow","tfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","ab","ArrayBuffer","z","inspectedMp4","indent","prefix","byte","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","classof","getIteratorMethod","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBytes","bits","valu","skipLeadingZeros","leadingZeroCount","clz","IE8_DOM_DEFINE","toPrimitive","Attributes","currentNal","createDefaultSample","sampleForFrame","nalsByteLength","numberOfNals","totalByteLength","setUint32","arg","headers","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","audioobjecttype","samplingfrequencyindex","RBSP_TRAILING_BITS","payloadSize","results","shared","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","empty","newPromiseCapability","USE_NATIVE","FakePromise","exec","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","catch","r","capability","$$reject","iter","all","remaining","$index","alreadyCalled","race","IObject","parseUtf8","tagParsers","TXXX","description","WXXX","url","PRIV","privateData","debug","tagSize","log","D","forbiddenField","parsePid","parseAdaptionField","payloadOffset","parseNalUnitType","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","condition","isError","View","routerView","route","$route","_routerViewCache","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","val2","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","_Vue","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","stack","segment","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","escaped","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","re","sensitive","regexpToRegexp","arrayToRegexp","regexp","stringToRegexp","strict","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","replaceState","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","pageYOffset","getElementPosition","docEl","documentElement","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","Time","now","_key","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","flatten","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","search","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","$keys","enumBugKeys","PromiseCapability","$$resolve","SAFE_CLOSING","riter","skipClosing","classCallCheck","_extends","inherits","subClass","superClass","setPrototypeOf","possibleConstructorReturn","ReferenceError","LineStream","_Stream","_this","nextNewline","substring","attributeSeparator","keyvalue","parseAttributes","attributes","ParseStream","customParsers","tagType","title","playlistType","allowed","URI","uri","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_ref","_this2","customType","dataParser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","forced","program-date-time","targetduration","targetDuration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","formatAudioPlaylist","_attributes","bandwidth","CODECS","codecs","periodIndex","resolvedUri","contentProtection","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","role","label","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoOnly","_ref4","mimeType","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","master","_typeof","merge","_len","objects","mpd_parser_es_resolveUrl","relativeUrl","url_toolkit_default","buildAbsoluteURL","window_default","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","endRange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodStartWC","periodEndWC","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","segmentTime","nextS","lists","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","identifier","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","mpd_parser_es_errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","mpd_parser_es_parseAttributes","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","acc","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpd_parser_es_stringToMpdXml","manifestString","parser","DOMParser","xml","parseFromString","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","parseUTCTiming","unpad","padded","aes_decrypter_es_classCallCheck","createClass","protoProps","staticProps","aes_decrypter_es_inherits","aes_decrypter_es_possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","STEP","asyncStream_","decryptChunk_","video_es_version","level","video_es_history","video_es_logByType","lvl","levels","lvlRegExp","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","video_es_typeof","video_es_classCallCheck","video_es_inherits","video_es_possibleConstructorReturn","taggedTemplateLiteralLoose","strings","video_es_toString","video_es_isObject","each","accum","video_es_assign","sources","isPlain","video_es_computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","document_default","isEl","isInFrame","createQuerier","createEl","properties","propName","tsml_default","attrName","appendContent","prependTo","hasClass","classToCheck","contains","classToAdd","classToRemove","toggleClass","classToToggle","predicate","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","clientLeft","scrollLeft","clientTop","scrollTop","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","emptyEl","normalizeContent","insertContent","isSingleLeftClick","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","getTime","hasData","removeData","_cleanUpEvents","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","readyState","video_es_createStyleElement","styleSheet","bound","throttle","throttled","video_es_debounce","cancel","clearTimeout","debounced","_later","EventTarget","allowedEvents_","ael","EVENT_MAP","queueTrigger","Map","oldTimeout","isEvented","eventBusEl_","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","video_es_Component","Component","play","player_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","video_es_i","dist_video_es_i","MediaError","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","addToBody","host","protocol","details","video_es_getAbsoluteURL","getFileExtension","splitPathRe","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","errors","groupCollapsed","groupEnd","video_es_loadTrack","cors","_xhr_2_4_0_xhr_default","response","responseBody","loaded_","tech_","loadHandler","video_es_TextTrack","_Track","TextTrack","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","preselectTrack","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","stepChild","haveTitle","video_es_MenuButton","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","video_es_getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","video_es_getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","video_es_Player","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userWasActive","PromiseClass","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","_this10","middlewareSource","src_","notSupportedMessage","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","normalizeId","videojs$1","getPlayer","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","writeable","addLanguage","_mergeOptions","createTimeRange","xhr","dom","video_es_resolveUrl","baseURL","relativeURL","classCallCheck$1","createClass$1","get$2","get$$1","receiver","inherits$1","possibleConstructorReturn$1","slicedToArray$1","sliceIterator","_arr","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","withCredentials","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","media_","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","mediaChange","started","isFinalRendition","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","video_es_duration","sumDurations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","seekableStart","seekableEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","hexDump","ascii","tagDump","textRanges","utils","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","inbandTextTracks_","metadataTrack_","inBandMetadataTrackDispatchType","removeCuesFromTrack","deprecateOldCue","durationOfVideo","dur","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","timestampOffset","videoDuration","mediaSource_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","trackFragments","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","_findBox","getVideoTrackIds","mp4Generator","fileType","movie","bin","toUnsigned$1","subresults","traks","trafs","baseTimes","baseTime","videoTrackIds","hdlrs","tkhds","findBox","captionPacketParser","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","silence","ONE_SECOND_IN_TS$1","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","ONE_SECOND_IN_TS$2","_textifyMp","transmuxer","parseType$1","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","findSeiNals","seiNal","lastMatchedSample","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","parseEmbeddedCaptions","CaptionParser$$1","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","classCallCheck$$1","createClass$$1","wireTransmuxerEvents","initArray","typedArray","action","gopInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","video_es_handleInitSegmentResponse","probe_default","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","getMostImportantError","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","responseType","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","video_es_comparePlaylistResolution","leftWidth","rightWidth","video_es_simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","isEndOfStream","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","video_es_updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","ts_inspector_default","syncPointStrategies","datetimeToDisplayTime","lastDistance","segmentStart","distance","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","inherits$$1","possibleConstructorReturn$$1","AsyncStream$$1","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","matchingPlaylists","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","renditionSelectionMixin","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","INITIAL_BANDWIDTH","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","keySystems","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","UNSCOPABLES","promiseCapability","g","eval","_defineProperty","dPs","Empty","createDict","iframeDocument","iframe","lt","gt","write","Properties","bitmap","parseHeaders","xtend","forEachArray","isEmpty","initParams","createXHR","_createXHR","readystatechange","loadFunc","getBody","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onprogress","onabort","ontimeout","username","password","setRequestHeader","beforeSend","send","responseXML","firefoxBugTakenEffect","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","autoKeyword","directionSetting","lr","rl","alignSetting","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","getCueAsHTML","applyMixin","vuexInit","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","subscribe","mutation","forEachValue","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","namespaced","actions","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","register","targetModule","newModule","root","getNamespace","rawChildModule","unregister","Store","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","dispatch","commit","installModule","resetStoreVM","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","registerAction","registerGetter","noNamespace","_type","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","rawGetter","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","helper","index_esm","getKeys","gOPS","pIE","$assign","A","K","aLen","getSymbols","isEnum","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","lastIndexOf","defer","invoke","html","cel","setTask","clearTask","clearImmediate","Dispatch","counter","ONREADYSTATECHANGE","importScripts","isCallable","forEachString","forEachObject","thisArg","getOwnPropertySymbols"],"mappings":"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","file":"js/chunk-vendors.48f86305.js","sourcesContent":["var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  isLikelyAacData,\n  arrayEquals,\n  sumFrameByteLengths;\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","module.exports = false;\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","module.exports = {};\n","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","exports.f = {}.propertyIsEnumerable;\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.2.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.2.3\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nvar EVENT_MAP = void 0;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n\n\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _this);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + camelTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.2.5\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n\n    var toUnsigned$1 = bin.toUnsigned;\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n    // Find the data for a box specified by its path\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n\n        type = parseType(data.subarray(i + 4, i + 8));\n\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      }\n\n      // we've finished searching all of data\n      return results;\n    };\n\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']);\n\n      // mdhd timescale\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n\n        tkhd = _findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result;\n\n      // we need info from two childrend of each track fragment box\n      trafs = _findBox(fragment, ['moof', 'traf']);\n\n      // determine the start times for each track\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime;\n\n          // get the track id from the tfhd\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]);\n          // assume a 90kHz clock if no timescale was specified\n          scale = timescale[id] || 90e3;\n\n          // get the base media decode time from the tfdt\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity;\n\n          // convert base time to seconds\n          return baseTime / scale;\n        });\n      }));\n\n      // return the minimum\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i];\n\n        // Split on 'aud'-type nal units\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      }\n\n      // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      }\n\n      // Push the final frame\n      frames.push(currentFrame);\n      return frames;\n    };\n\n    // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = [];\n\n      // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts;\n\n      // store some metadata about all the Gops\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration;\n\n      // push the final Gop\n      gops.push(currentGop);\n      return gops;\n    };\n\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount;\n\n        // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    };\n\n    // generate the track's sample table from an array of gops\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          sample = sampleForFrame(currentFrame, dataOffset);\n\n          dataOffset += sample.size;\n\n          samples.push(sample);\n        }\n      }\n      return samples;\n    };\n\n    // generate the track's raw mdat data from an array of gops\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer);\n\n      // For each Gop..\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        // For each Frame..\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          // For each NAL..\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n\n    var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n\n    // exports\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = captionPacketParser.parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = captionPacketParser.parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts;\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          // Configure the caption window if we're in roll-up mode\n          if (this.mode_ === 'rollUp') {\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp';\n        // Spec says to wipe memories when switching to roll-up\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        // This triggers data on the H264Stream\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS$1 = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$1;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$1;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var isLikelyAacData, arrayEquals, sumFrameByteLengths;\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        trackDecodeInfo.clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$2 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$2 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          trackDecodeInfo.clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = frameUtils.generateSampleTable(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$1 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n\n\n    // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i;\n\n        // iterate past any SPSs\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        // iterate past any PPSs\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$1(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$1(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$1(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8;\n\n        // parse out the name field\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        }\n        // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n        result.name = decodeURIComponent(escape(result.name));\n\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        };\n\n        // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n\n        // convert fixed-point, base 16 back to a number\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n\n        i = 8;\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2;\n        // convert fixed-point, base 16 back to a number\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n\n\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n\n\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n\n\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n\n\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n\n\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n\n\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n\n\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        }\n\n        // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n        }\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box;\n\n      // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n      }\n      return result;\n    };\n\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' ');\n\n      // iterate over all the boxes\n      return inspectedMp4.map(function (box, index) {\n\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' +\n\n        // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes';\n\n          // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key];\n\n          // print out raw bytes as hexademical\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n            if (!bytes) {\n              return prefix + '<>';\n            }\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          }\n\n          // stringify generic objects\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + (\n\n        // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // Bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          sample.pts = currentDts + sample.compositionTimeOffset;\n\n          currentDts += sample.duration;\n        });\n\n        allSamples = allSamples.concat(samples);\n      });\n\n      return allSamples;\n    };\n\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']);\n      // To get SEI NAL units\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = [];\n\n      // Pair up each traf with a mdat as moofs and mdats are in pairs\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']);\n        // Exactly 1 tfhd per traf\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']);\n        // Either 0 or 1 tfdt per traf\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals;\n\n        // Only parse video data for the chosen video track\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n\n      return captionNals;\n    };\n\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1;\n\n      // Stores segments seen before trackId and timescale are set\n      var segmentCache;\n      // Stores video track ID of the track being parsed\n      var trackId;\n      // Stores the timescale of the track being parsed\n      var timescale;\n      // Stores captions parsed so far\n      var parsedCaptions;\n\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true;\n\n        // Collect dispatched captions\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && (typeof timescales === 'undefined' ? 'undefined' : _typeof(timescales)) === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null;\n\n          // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId];\n\n          // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        }\n\n        // Now that a timescale and trackId is set, parse cached segments\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals);\n        // Force the parsed captions to be dispatched\n        this.flushStream();\n\n        return parsedCaptions;\n      };\n\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n\n      /**\n        * Reset caption buckets for new data\n       **/\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n\n      /**\n        * Reset caption parser\n       **/\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  // neither buffer has been created yet\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  }\n\n  // only one buffer is configured\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are configured\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are empty\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: videoBuffered.start(count), type: 'start' });\n    extents.push({ time: videoBuffered.end(count), type: 'end' });\n  }\n  count = audioBuffered.length;\n  while (count--) {\n    extents.push({ time: audioBuffered.start(count), type: 'start' });\n    extents.push({ time: audioBuffered.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n\n    // Initialize CaptionParser if it hasn't been yet\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({ type: 'usage', name: 'hls-608' });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n    // Fmp4 CaptionParser\n    _this.captionParser_ = new CaptionParser();\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done);\n      // clears fmp4 captions\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      // This has fmp4 captions, add them to text tracks\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        });\n        // Reset stored captions since we added parsed\n        // captions to a text track at this point\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media);\n\n      // delete all buffered data to allow an immediate quality switch, then seek\n      // in place to give the browser a kick to remove any cached frames from the\n      // previous rendition\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause\n        // segments from the previously enabled rendition to load before the new playlist\n        // has finished loading\n        _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n      });\n\n      // don't need to reset audio as it is reset when media changes\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n            _this5.seekTo_(seekable$$1.end(0));\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.2.5\";\n\n// since VHS handles HLS and DASH (and in the future, more types), use * to capture all\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.currentTime());\n      }\n    }\n  };\n});\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n      // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","exports.f = Object.getOwnPropertySymbols;\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n"],"sourceRoot":""}